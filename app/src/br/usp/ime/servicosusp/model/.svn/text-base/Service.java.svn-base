package br.usp.ime.servicosusp.model;

import java.util.ArrayList;

import android.database.Cursor;
import br.usp.ime.servicosusp.servicosUsp;

public class Service {

	public String getKeywords() {
		return keywords;
	}

	public void setKeywords(String keywords) {
		this.keywords = keywords;
	}

	public String getDescsrv() {
		return descsrv;
	}

	public void setDescsrv(String descsrv) {
		this.descsrv = descsrv;
	}

	@Override
	public String toString() {
		return nomesrv;
	}

	private int codsrv;
	private int codctg;
	private int codloc;
	private String nomesrv;
	private String cplloc;
	private String tel1;
	private String tel2;
	private String email;
	private String link;
	private String descsrv;
	private String keywords;

	public Service(int codsrv, int codctg, int codloc, String nomesrv,
			String desc, String keywords, String cplloc, String tel1,
			String tel2, String email, String link) {
		super();
		this.codsrv = codsrv;
		this.codctg = codctg;
		this.codloc = codloc;
		this.nomesrv = nomesrv;
		this.cplloc = cplloc;
		this.tel1 = tel1;
		this.tel2 = tel2;
		this.email = email;
		this.link = link;
		this.descsrv = desc;
		this.keywords = keywords;

		if (this.cplloc == null) {
			this.cplloc = new String("");
		}
		if (this.tel1 == null) {
			this.tel1 = new String("");
		}
		if (this.tel2 == null) {
			this.tel2 = new String("");
		}
		if (this.email == null) {
			this.email = new String("");
		}
		if (this.link == null) {
			this.link = new String("");
		}
		if (this.descsrv == null) {
			this.descsrv = new String("");
		}
		if (this.keywords == null) {
			this.keywords = new String("");
		}
	}

	public Service() {
		super();
	}

	public int getCodsrv() {
		return codsrv;
	}

	public void setCodsrv(int codsrv) {
		this.codsrv = codsrv;
	}

	public int getCodctg() {
		return codctg;
	}

	public void setCodctg(int codctg) {
		this.codctg = codctg;
	}

	public int getCodloc() {
		return codloc;
	}

	public void setCodloc(int codloc) {
		this.codloc = codloc;
	}

	public String getNomesrv() {
		return nomesrv;
	}

	public void setNomesrv(String nomesrv) {
		this.nomesrv = nomesrv;
	}

	public String getCplloc() {
		return cplloc;
	}

	public void setCplloc(String cplloc) {
		this.cplloc = cplloc;
	}

	public String getTel1() {
		return tel1;
	}

	public void setTel1(String tel1) {
		this.tel1 = tel1;
	}

	public String getTel2() {
		return tel2;
	}

	public void setTel2(String tel2) {
		this.tel2 = tel2;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getLink() {
		return link;
	}

	public void setLink(String link) {
		this.link = link;
	}

	public static ArrayList<Service> getServices() {

		ArrayList<Service> services = new ArrayList<Service>();

		Cursor banco = servicosUsp.dbHelper.getReadableDatabase().rawQuery(
				"Select * from Servico order by nomsrv", null);
		if (banco.moveToFirst()) {
			do {
				Service s = new Service(banco.getInt(0), banco.getInt(1),
						banco.getInt(2), banco.getString(3),
						banco.getString(4), banco.getString(5),
						banco.getString(6), banco.getString(7),
						banco.getString(8), banco.getString(9), banco.getString(10));
				services.add(s);
			} while (banco.moveToNext());
		}

		// Add Special Service Grades...
		//TODO add more special services here + more details to the ones below
		Service grades = new Service();
		grades.setNomesrv("Acesso Janus");
		grades.setCodsrv(9999);
		grades.setCodctg(1);
		grades.setCodloc(0);
		grades.setKeywords("janus notas posgraduacao");
		services.add(grades);
		
		Service jupiter = new Service();
		jupiter.setNomesrv("Acesso Jupiter");
		jupiter.setCodsrv(9998);
		jupiter.setCodctg(1);
		jupiter.setCodloc(0);
		jupiter.setKeywords("jupiter notas graduacao");
		services.add(jupiter);
		
		Service circular = new Service();
		circular.setNomesrv("Circular");
		circular.setCodsrv(9997);
		circular.setCodctg(3);
		circular.setCodloc(0);
		circular.setKeywords("Circular Onibus Metro Butanta");
		services.add(circular);
		
		return services;
	}

	public static ArrayList<Service> getServiceByLocal(int codlocal) {	
		ArrayList<Service> services = new ArrayList<Service>();
		ArrayList<Service> servicesByLocal = new ArrayList<Service>();
		
		services = getServices();
		
		for(int i=0; i < services.size(); i++){
			if(services.get(i).getCodloc() == codlocal){
				servicesByLocal.add(services.get(i));
			}
		}	
		
/*
		ArrayList<Service> services = new ArrayList<Service>();
		String[] args = { String.valueOf(codlocal) };
		Cursor banco = servicosUsp.dbHelper.getReadableDatabase().rawQuery(
				"Select * from Servico where codloc=?", args);
		if (banco.moveToFirst()) {
			do {
				Service s = new Service(banco.getInt(0), banco.getInt(1),
						banco.getInt(2), banco.getString(3),
						banco.getString(4), banco.getString(5),
						banco.getString(6), banco.getString(7),
						banco.getString(8), banco.getString(9), banco.getString(10));
				services.add(s);
			} while (banco.moveToNext());
		}
*/
		return servicesByLocal;
	}

	public static Service getServiceById(int codservice) {
				
		Service service = null;
		String[] args = { String.valueOf(codservice) };

		Cursor banco = servicosUsp.dbHelper.getReadableDatabase().rawQuery(
				"Select * from Servico where codsrv=?", args);
		if (banco.moveToFirst()) {
			service = new Service(banco.getInt(0), banco.getInt(1),
					banco.getInt(2), banco.getString(3),
					banco.getString(4), banco.getString(5),
					banco.getString(6), banco.getString(7),
					banco.getString(8), banco.getString(9), banco.getString(10));

		}

		return service;
	}
	
	
	public static ArrayList<Service> getServicesByCategory(int codctg){
		ArrayList<Service> services = new ArrayList<Service>();
		ArrayList<Service> servicesFromCat = new ArrayList<Service>();
		
		services = getServices();
		
		for(int i=0; i < services.size(); i++){		
			if(services.get(i).getCodctg() == codctg){
				servicesFromCat.add(services.get(i));
			}
		}
		
		return servicesFromCat;
	}
	
	public static ArrayList<Service> getServicesByKeyword(String search) { 
		ArrayList<Service> services = new ArrayList<Service>();
		ArrayList<Service> servicesByKw = new  ArrayList<Service>();
		services = getServices();
		
		for(Service s: services){
			if(s.getKeywords().toUpperCase().contains(search.toUpperCase())){
				servicesByKw.add(s);
			}
		}
		
		return servicesByKw;
	}
	
	public static ArrayList<Service> getServicesByCatAndKWord(int codctg, String search){
		ArrayList<Service> services = new ArrayList<Service>();
		ArrayList<Service> servicesByCatAndKeyWord = new ArrayList<Service>();
		
		services = getServices();
		
		for(int i=0; i < services.size(); i++){
			if(services.get(i).getCodctg() == codctg && services.get(i).getKeywords().toUpperCase().contains(search.toUpperCase())){
				servicesByCatAndKeyWord.add(services.get(i));
			}
		}
		
		return servicesByCatAndKeyWord;
	}	
}
